{"version":3,"sources":["../src/index.js"],"names":["handleChange","prevValue","newValue","onChange","PatchEvent","from","createColors","type","activeValue","name","options","onFocus","readOnly","list","tooltip","borderradius","background","contrastcutoff","lighten","darken","opacityThreshold","inner","outer","bg","TinyColor","bgBrightness","getBrightness","bgAccent","isLight","colorList","Function","console","warn","map","color","i","value","error","currentColor","isValid","isLowContrast","Math","abs","isLowAlpha","getAlpha","displayColor","tinycolor","isActive","decoratorColor","children","title","event","key","ColorList","props","ref","level","markers","presence","validation","filter","marker","errors","groupName","description","studioTheme","length","displayName","propTypes","PropTypes","shape","string","number","bool","arrayOf","oneOfType","object","isRequired","func","array","defaultProps","undefined","onBlur"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport { TinyColor } from '@ctrl/tinycolor'\nimport { studioTheme, ThemeProvider } from '@sanity/ui'\nimport { uniqueId } from 'lodash'\nimport FormField from 'part:@sanity/components/formfields/default?'\nimport PatchEvent, { set, unset } from 'part:@sanity/form-builder/patch-event?'\nimport PropTypes from 'prop-types'\nimport React, { forwardRef } from 'react'\nimport { Color, ConditionalWrapper, List, ListItem, Pattern, ToolTip } from './components'\nimport { checkEqual, getColorString, getStaticKey } from './helpers'\n\nconst handleChange = ({ prevValue, newValue, onChange }) => {\n    if (checkEqual(newValue, prevValue)) {\n        onChange(PatchEvent.from(unset()))\n    } else {\n        onChange(PatchEvent.from(set(newValue)))\n    }\n}\n\nconst createColors = ({ type, activeValue, name, options, onChange, onFocus, readOnly }) => {\n    const {\n        list = [],\n        tooltip,\n        borderradius,\n        background = '#FFFFFF',\n        contrastcutoff = 20,\n        lighten = 10,\n        darken = 10,\n        opacityThreshold = 0.2,\n    } = options || []\n    const { inner = '100%', outer = '100%' } = borderradius || {}\n    const bg = new TinyColor(background)\n    const bgBrightness = bg?.getBrightness() || 255\n    const bgAccent = bg?.isLight() ? bg?.darken(darken) : bg?.lighten(lighten)\n\n    let colorList = list\n    if (list instanceof Function) {\n        colorList = list()\n    }\n\n    if (!colorList) {\n        // eslint-disable-next-line no-console\n        console.warn('[color-list] No color values found, aborting.')\n        return null\n    }\n\n    return colorList.map((color, i) => {\n        if (!color.value) {\n            // eslint-disable-next-line no-console\n            console.error('sanity-plugin-color-list could not find a color value. Please check your schema.')\n            return null\n        }\n        const currentColor = new TinyColor(color.value)\n        if (!currentColor.isValid) {\n            // eslint-disable-next-line no-console\n            console.error(\n                `sanity-plugin-color-list could not recognize the color: ${color.value}. Perhaps try another format.`\n            )\n            return null\n        }\n\n        const isLowContrast = Math.abs(bgBrightness - currentColor.getBrightness()) <= contrastcutoff\n        const isLowAlpha = currentColor.getAlpha() < opacityThreshold\n\n        const displayColor = getColorString({\n            tinycolor: currentColor,\n            color: color.value,\n        })\n        const isActive = checkEqual(activeValue, color)\n\n        let decoratorColor = currentColor.isLight() ? currentColor.darken(darken) : currentColor.lighten(lighten)\n        decoratorColor = isLowAlpha ? bgAccent : decoratorColor\n\n        return (\n            <ConditionalWrapper\n                key={getStaticKey(displayColor + i)}\n                condition={tooltip}\n                wrapper={children => <ToolTip title={color.title}>{children}</ToolTip>}\n            >\n                <ListItem\n                    isActive={isActive}\n                    decoratorColor={isLowContrast || isLowAlpha ? decoratorColor : displayColor}\n                    radius={outer}\n                >\n                    <Pattern isActive={isActive} />\n                    <Color\n                        type=\"radio\"\n                        role=\"radio\"\n                        name={name}\n                        aria-label={color.title}\n                        aria-checked={isActive}\n                        tabindex={isActive || (!activeValue && i === 0) ? '0' : '-1'}\n                        disabled={readOnly}\n                        checked={isActive}\n                        value={color}\n                        onChange={() =>\n                            handleChange({\n                                prevValue: activeValue,\n                                newValue: color,\n                                onChange,\n                            })\n                        }\n                        onClick={() =>\n                            handleChange({\n                                prevValue: activeValue,\n                                newValue: color,\n                                onChange,\n                            })\n                        }\n                        onKeyPress={event =>\n                            event.key === 'Enter' &&\n                            handleChange({\n                                prevValue: activeValue,\n                                newValue: color,\n                                onChange,\n                            })\n                        }\n                        onFocus={onFocus}\n                        isActive={isActive}\n                        radius={inner}\n                        hasOutline={isLowContrast || isLowAlpha}\n                        outlineColor={decoratorColor}\n                        fillColor={displayColor}\n                    />\n                </ListItem>\n            </ConditionalWrapper>\n        )\n    })\n}\n\nconst ColorList = forwardRef((props, ref) => {\n    const { onChange, level, value, type, readOnly, markers, onFocus, presence } = props\n    const validation = markers.filter(marker => marker.type === 'validation')\n    const errors = validation.filter(marker => marker.level === 'error')\n    const groupName = uniqueId('ColorList')\n\n    return (\n        <FormField\n            label={type.title}\n            description={type.description}\n            level={level}\n            labelFor={groupName}\n            markers={markers}\n            presence={presence}\n            onFocus={onFocus}\n        >\n            <ThemeProvider theme={studioTheme}>\n                <List ref={ref} role=\"radiogroup\" hasError={errors.length > 0}>\n                    {createColors({\n                        type,\n                        activeValue: value,\n                        name: groupName,\n                        options: type.options,\n                        onChange,\n                        onFocus,\n                        readOnly,\n                    })}\n                </List>\n            </ThemeProvider>\n        </FormField>\n    )\n})\n\nColorList.displayName = 'ColorList'\n\nColorList.propTypes = {\n    type: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        options: PropTypes.shape({\n            background: PropTypes.string,\n            borderradius: PropTypes.shape({\n                outer: PropTypes.string,\n                inner: PropTypes.string,\n            }),\n            contrastcutoff: PropTypes.number,\n            lighten: PropTypes.number,\n            darken: PropTypes.number,\n            tooltip: PropTypes.bool,\n            list: PropTypes.arrayOf(\n                PropTypes.shape({\n                    title: PropTypes.string,\n                    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n                })\n            ),\n        }).isRequired,\n    }).isRequired,\n    level: PropTypes.number,\n    value: PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string,\n    }),\n    onChange: PropTypes.func.isRequired,\n    readOnly: PropTypes.bool,\n    onFocus: PropTypes.func,\n    markers: PropTypes.array,\n    presence: PropTypes.array,\n}\n\nColorList.defaultProps = {\n    level: undefined,\n    value: undefined,\n    onChange: undefined,\n    readOnly: undefined,\n    onFocus: undefined,\n    onBlur: undefined,\n    markers: undefined,\n    presence: undefined,\n}\n\nexport default ColorList\n"],"file":"index.js"}